// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: myorg/todo/v1/get_todos.proto

package v1

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OrderTodosBy int32

const (
	OrderTodosBy_ORDER_TODOS_BY_UNSPECIFIED     OrderTodosBy = 0
	OrderTodosBy_ORDER_TODOS_BY_ID_ASC          OrderTodosBy = 1
	OrderTodosBy_ORDER_TODOS_BY_ID_DESC         OrderTodosBy = 2
	OrderTodosBy_ORDER_TODOS_BY_CREATED_AT_ASC  OrderTodosBy = 3
	OrderTodosBy_ORDER_TODOS_BY_CREATED_AT_DESC OrderTodosBy = 4
	OrderTodosBy_ORDER_TODOS_BY_TITLE_ASC       OrderTodosBy = 5
	OrderTodosBy_ORDER_TODOS_BY_TITLE_DESC      OrderTodosBy = 6
)

// Enum value maps for OrderTodosBy.
var (
	OrderTodosBy_name = map[int32]string{
		0: "ORDER_TODOS_BY_UNSPECIFIED",
		1: "ORDER_TODOS_BY_ID_ASC",
		2: "ORDER_TODOS_BY_ID_DESC",
		3: "ORDER_TODOS_BY_CREATED_AT_ASC",
		4: "ORDER_TODOS_BY_CREATED_AT_DESC",
		5: "ORDER_TODOS_BY_TITLE_ASC",
		6: "ORDER_TODOS_BY_TITLE_DESC",
	}
	OrderTodosBy_value = map[string]int32{
		"ORDER_TODOS_BY_UNSPECIFIED":     0,
		"ORDER_TODOS_BY_ID_ASC":          1,
		"ORDER_TODOS_BY_ID_DESC":         2,
		"ORDER_TODOS_BY_CREATED_AT_ASC":  3,
		"ORDER_TODOS_BY_CREATED_AT_DESC": 4,
		"ORDER_TODOS_BY_TITLE_ASC":       5,
		"ORDER_TODOS_BY_TITLE_DESC":      6,
	}
)

func (x OrderTodosBy) Enum() *OrderTodosBy {
	p := new(OrderTodosBy)
	*p = x
	return p
}

func (x OrderTodosBy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderTodosBy) Descriptor() protoreflect.EnumDescriptor {
	return file_myorg_todo_v1_get_todos_proto_enumTypes[0].Descriptor()
}

func (OrderTodosBy) Type() protoreflect.EnumType {
	return &file_myorg_todo_v1_get_todos_proto_enumTypes[0]
}

func (x OrderTodosBy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderTodosBy.Descriptor instead.
func (OrderTodosBy) EnumDescriptor() ([]byte, []int) {
	return file_myorg_todo_v1_get_todos_proto_rawDescGZIP(), []int{0}
}

type GetTodosRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaginationRequest *PaginationRequest `protobuf:"bytes,1,opt,name=pagination_request,json=paginationRequest,proto3" json:"pagination_request,omitempty"`
	OrderBy           OrderTodosBy       `protobuf:"varint,2,opt,name=order_by,json=orderBy,proto3,enum=myorg.todo.v1.OrderTodosBy" json:"order_by,omitempty"`
	Where             *TodosWhere        `protobuf:"bytes,3,opt,name=where,proto3" json:"where,omitempty"`
}

func (x *GetTodosRequest) Reset() {
	*x = GetTodosRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myorg_todo_v1_get_todos_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTodosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTodosRequest) ProtoMessage() {}

func (x *GetTodosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_myorg_todo_v1_get_todos_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTodosRequest.ProtoReflect.Descriptor instead.
func (*GetTodosRequest) Descriptor() ([]byte, []int) {
	return file_myorg_todo_v1_get_todos_proto_rawDescGZIP(), []int{0}
}

func (x *GetTodosRequest) GetPaginationRequest() *PaginationRequest {
	if x != nil {
		return x.PaginationRequest
	}
	return nil
}

func (x *GetTodosRequest) GetOrderBy() OrderTodosBy {
	if x != nil {
		return x.OrderBy
	}
	return OrderTodosBy_ORDER_TODOS_BY_UNSPECIFIED
}

func (x *GetTodosRequest) GetWhere() *TodosWhere {
	if x != nil {
		return x.Where
	}
	return nil
}

type GetTodosResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Edges    []*TodoEdge `protobuf:"bytes,1,rep,name=edges,proto3" json:"edges,omitempty"`
	PageInfo *PageInfo   `protobuf:"bytes,2,opt,name=page_info,json=pageInfo,proto3" json:"page_info,omitempty"`
	// total count of items that match the filter.
	// might be greater than page size.
	TotalCount int32 `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *GetTodosResponse) Reset() {
	*x = GetTodosResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myorg_todo_v1_get_todos_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTodosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTodosResponse) ProtoMessage() {}

func (x *GetTodosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_myorg_todo_v1_get_todos_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTodosResponse.ProtoReflect.Descriptor instead.
func (*GetTodosResponse) Descriptor() ([]byte, []int) {
	return file_myorg_todo_v1_get_todos_proto_rawDescGZIP(), []int{1}
}

func (x *GetTodosResponse) GetEdges() []*TodoEdge {
	if x != nil {
		return x.Edges
	}
	return nil
}

func (x *GetTodosResponse) GetPageInfo() *PageInfo {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

func (x *GetTodosResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type TodoEdge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cursor string `protobuf:"bytes,1,opt,name=cursor,proto3" json:"cursor,omitempty"`
	Todo   *Todo  `protobuf:"bytes,2,opt,name=todo,proto3" json:"todo,omitempty"`
}

func (x *TodoEdge) Reset() {
	*x = TodoEdge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myorg_todo_v1_get_todos_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TodoEdge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TodoEdge) ProtoMessage() {}

func (x *TodoEdge) ProtoReflect() protoreflect.Message {
	mi := &file_myorg_todo_v1_get_todos_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TodoEdge.ProtoReflect.Descriptor instead.
func (*TodoEdge) Descriptor() ([]byte, []int) {
	return file_myorg_todo_v1_get_todos_proto_rawDescGZIP(), []int{2}
}

func (x *TodoEdge) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

func (x *TodoEdge) GetTodo() *Todo {
	if x != nil {
		return x.Todo
	}
	return nil
}

type TodosWhere struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title     *StringFilter `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	CreatedAt *NumberFilter `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *TodosWhere) Reset() {
	*x = TodosWhere{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myorg_todo_v1_get_todos_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TodosWhere) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TodosWhere) ProtoMessage() {}

func (x *TodosWhere) ProtoReflect() protoreflect.Message {
	mi := &file_myorg_todo_v1_get_todos_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TodosWhere.ProtoReflect.Descriptor instead.
func (*TodosWhere) Descriptor() ([]byte, []int) {
	return file_myorg_todo_v1_get_todos_proto_rawDescGZIP(), []int{3}
}

func (x *TodosWhere) GetTitle() *StringFilter {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *TodosWhere) GetCreatedAt() *NumberFilter {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type NumberFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	In    []*timestamp.Timestamp `protobuf:"bytes,1,rep,name=in,proto3" json:"in,omitempty"`
	NotIn []*timestamp.Timestamp `protobuf:"bytes,2,rep,name=not_in,json=notIn,proto3" json:"not_in,omitempty"`
	Not   *timestamp.Timestamp   `protobuf:"bytes,3,opt,name=not,proto3" json:"not,omitempty"`
	Lt    *timestamp.Timestamp   `protobuf:"bytes,4,opt,name=lt,proto3" json:"lt,omitempty"`
	Gt    *timestamp.Timestamp   `protobuf:"bytes,5,opt,name=gt,proto3" json:"gt,omitempty"`
	Lte   *timestamp.Timestamp   `protobuf:"bytes,6,opt,name=lte,proto3" json:"lte,omitempty"`
	Gte   *timestamp.Timestamp   `protobuf:"bytes,7,opt,name=gte,proto3" json:"gte,omitempty"`
}

func (x *NumberFilter) Reset() {
	*x = NumberFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myorg_todo_v1_get_todos_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NumberFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NumberFilter) ProtoMessage() {}

func (x *NumberFilter) ProtoReflect() protoreflect.Message {
	mi := &file_myorg_todo_v1_get_todos_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NumberFilter.ProtoReflect.Descriptor instead.
func (*NumberFilter) Descriptor() ([]byte, []int) {
	return file_myorg_todo_v1_get_todos_proto_rawDescGZIP(), []int{4}
}

func (x *NumberFilter) GetIn() []*timestamp.Timestamp {
	if x != nil {
		return x.In
	}
	return nil
}

func (x *NumberFilter) GetNotIn() []*timestamp.Timestamp {
	if x != nil {
		return x.NotIn
	}
	return nil
}

func (x *NumberFilter) GetNot() *timestamp.Timestamp {
	if x != nil {
		return x.Not
	}
	return nil
}

func (x *NumberFilter) GetLt() *timestamp.Timestamp {
	if x != nil {
		return x.Lt
	}
	return nil
}

func (x *NumberFilter) GetGt() *timestamp.Timestamp {
	if x != nil {
		return x.Gt
	}
	return nil
}

func (x *NumberFilter) GetLte() *timestamp.Timestamp {
	if x != nil {
		return x.Lte
	}
	return nil
}

func (x *NumberFilter) GetGte() *timestamp.Timestamp {
	if x != nil {
		return x.Gte
	}
	return nil
}

type StringFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	In            []string `protobuf:"bytes,1,rep,name=in,proto3" json:"in,omitempty"`
	Not           string   `protobuf:"bytes,2,opt,name=not,proto3" json:"not,omitempty"`
	NotIn         []string `protobuf:"bytes,3,rep,name=not_in,json=notIn,proto3" json:"not_in,omitempty"`
	Contains      string   `protobuf:"bytes,4,opt,name=contains,proto3" json:"contains,omitempty"`
	EndsWith      string   `protobuf:"bytes,5,opt,name=ends_with,json=endsWith,proto3" json:"ends_with,omitempty"`
	StartsWith    string   `protobuf:"bytes,6,opt,name=starts_with,json=startsWith,proto3" json:"starts_with,omitempty"`
	NotContains   string   `protobuf:"bytes,7,opt,name=not_contains,json=notContains,proto3" json:"not_contains,omitempty"`
	NotEndsWith   string   `protobuf:"bytes,8,opt,name=not_ends_with,json=notEndsWith,proto3" json:"not_ends_with,omitempty"`
	NotStartsWith string   `protobuf:"bytes,9,opt,name=not_starts_with,json=notStartsWith,proto3" json:"not_starts_with,omitempty"`
}

func (x *StringFilter) Reset() {
	*x = StringFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myorg_todo_v1_get_todos_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringFilter) ProtoMessage() {}

func (x *StringFilter) ProtoReflect() protoreflect.Message {
	mi := &file_myorg_todo_v1_get_todos_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringFilter.ProtoReflect.Descriptor instead.
func (*StringFilter) Descriptor() ([]byte, []int) {
	return file_myorg_todo_v1_get_todos_proto_rawDescGZIP(), []int{5}
}

func (x *StringFilter) GetIn() []string {
	if x != nil {
		return x.In
	}
	return nil
}

func (x *StringFilter) GetNot() string {
	if x != nil {
		return x.Not
	}
	return ""
}

func (x *StringFilter) GetNotIn() []string {
	if x != nil {
		return x.NotIn
	}
	return nil
}

func (x *StringFilter) GetContains() string {
	if x != nil {
		return x.Contains
	}
	return ""
}

func (x *StringFilter) GetEndsWith() string {
	if x != nil {
		return x.EndsWith
	}
	return ""
}

func (x *StringFilter) GetStartsWith() string {
	if x != nil {
		return x.StartsWith
	}
	return ""
}

func (x *StringFilter) GetNotContains() string {
	if x != nil {
		return x.NotContains
	}
	return ""
}

func (x *StringFilter) GetNotEndsWith() string {
	if x != nil {
		return x.NotEndsWith
	}
	return ""
}

func (x *StringFilter) GetNotStartsWith() string {
	if x != nil {
		return x.NotStartsWith
	}
	return ""
}

var File_myorg_todo_v1_get_todos_proto protoreflect.FileDescriptor

var file_myorg_todo_v1_get_todos_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x6d, 0x79, 0x6f, 0x72, 0x67, 0x2f, 0x74, 0x6f, 0x64, 0x6f, 0x2f, 0x76, 0x31, 0x2f,
	0x67, 0x65, 0x74, 0x5f, 0x74, 0x6f, 0x64, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0d, 0x6d, 0x79, 0x6f, 0x72, 0x67, 0x2e, 0x74, 0x6f, 0x64, 0x6f, 0x2e, 0x76, 0x31, 0x1a, 0x18,
	0x6d, 0x79, 0x6f, 0x72, 0x67, 0x2f, 0x74, 0x6f, 0x64, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x6f,
	0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x6d, 0x79, 0x6f, 0x72, 0x67, 0x2f,
	0x74, 0x6f, 0x64, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcb, 0x01, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x54, 0x6f, 0x64, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4f, 0x0a,
	0x12, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x79, 0x6f, 0x72,
	0x67, 0x2e, 0x74, 0x6f, 0x64, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x11, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36,
	0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1b, 0x2e, 0x6d, 0x79, 0x6f, 0x72, 0x67, 0x2e, 0x74, 0x6f, 0x64, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x6f, 0x64, 0x6f, 0x73, 0x42, 0x79, 0x52, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x2f, 0x0a, 0x05, 0x77, 0x68, 0x65, 0x72, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x79, 0x6f, 0x72, 0x67, 0x2e, 0x74, 0x6f,
	0x64, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x64, 0x6f, 0x73, 0x57, 0x68, 0x65, 0x72, 0x65,
	0x52, 0x05, 0x77, 0x68, 0x65, 0x72, 0x65, 0x22, 0x98, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54,
	0x6f, 0x64, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x05,
	0x65, 0x64, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x79,
	0x6f, 0x72, 0x67, 0x2e, 0x74, 0x6f, 0x64, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x64, 0x6f,
	0x45, 0x64, 0x67, 0x65, 0x52, 0x05, 0x65, 0x64, 0x67, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x6d, 0x79, 0x6f, 0x72, 0x67, 0x2e, 0x74, 0x6f, 0x64, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x4b, 0x0a, 0x08, 0x54, 0x6f, 0x64, 0x6f, 0x45, 0x64, 0x67, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x6f, 0x64, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x79, 0x6f, 0x72, 0x67, 0x2e, 0x74, 0x6f, 0x64,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x64, 0x6f, 0x52, 0x04, 0x74, 0x6f, 0x64, 0x6f, 0x22,
	0x7b, 0x0a, 0x0a, 0x54, 0x6f, 0x64, 0x6f, 0x73, 0x57, 0x68, 0x65, 0x72, 0x65, 0x12, 0x31, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d,
	0x79, 0x6f, 0x72, 0x67, 0x2e, 0x74, 0x6f, 0x64, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x3a, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x79, 0x6f, 0x72, 0x67, 0x2e, 0x74, 0x6f, 0x64,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xcf, 0x02, 0x0a,
	0x0c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2a, 0x0a,
	0x02, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x69, 0x6e, 0x12, 0x31, 0x0a, 0x06, 0x6e, 0x6f, 0x74,
	0x5f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x49, 0x6e, 0x12, 0x2c, 0x0a, 0x03,
	0x6e, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x6e, 0x6f, 0x74, 0x12, 0x2a, 0x0a, 0x02, 0x6c, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x02, 0x6c, 0x74, 0x12, 0x2a, 0x0a, 0x02, 0x67, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02,
	0x67, 0x74, 0x12, 0x2c, 0x0a, 0x03, 0x6c, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x6c, 0x74, 0x65,
	0x12, 0x2c, 0x0a, 0x03, 0x67, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x67, 0x74, 0x65, 0x22, 0x90,
	0x02, 0x0a, 0x0c, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x02, 0x69, 0x6e, 0x12,
	0x10, 0x0a, 0x03, 0x6e, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6e, 0x6f,
	0x74, 0x12, 0x15, 0x0a, 0x06, 0x6e, 0x6f, 0x74, 0x5f, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x49, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x77, 0x69, 0x74,
	0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x73, 0x57, 0x69, 0x74,
	0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x73, 0x5f, 0x77, 0x69, 0x74, 0x68,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x73, 0x57, 0x69,
	0x74, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x6f, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x5f, 0x65, 0x6e, 0x64,
	0x73, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x6f,
	0x74, 0x45, 0x6e, 0x64, 0x73, 0x57, 0x69, 0x74, 0x68, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x6f, 0x74,
	0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x73, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6e, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x73, 0x57, 0x69, 0x74,
	0x68, 0x2a, 0xe9, 0x01, 0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x6f, 0x64, 0x6f, 0x73,
	0x42, 0x79, 0x12, 0x1e, 0x0a, 0x1a, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x54, 0x4f, 0x44, 0x4f,
	0x53, 0x5f, 0x42, 0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x54, 0x4f, 0x44, 0x4f,
	0x53, 0x5f, 0x42, 0x59, 0x5f, 0x49, 0x44, 0x5f, 0x41, 0x53, 0x43, 0x10, 0x01, 0x12, 0x1a, 0x0a,
	0x16, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x54, 0x4f, 0x44, 0x4f, 0x53, 0x5f, 0x42, 0x59, 0x5f,
	0x49, 0x44, 0x5f, 0x44, 0x45, 0x53, 0x43, 0x10, 0x02, 0x12, 0x21, 0x0a, 0x1d, 0x4f, 0x52, 0x44,
	0x45, 0x52, 0x5f, 0x54, 0x4f, 0x44, 0x4f, 0x53, 0x5f, 0x42, 0x59, 0x5f, 0x43, 0x52, 0x45, 0x41,
	0x54, 0x45, 0x44, 0x5f, 0x41, 0x54, 0x5f, 0x41, 0x53, 0x43, 0x10, 0x03, 0x12, 0x22, 0x0a, 0x1e,
	0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x54, 0x4f, 0x44, 0x4f, 0x53, 0x5f, 0x42, 0x59, 0x5f, 0x43,
	0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x41, 0x54, 0x5f, 0x44, 0x45, 0x53, 0x43, 0x10, 0x04,
	0x12, 0x1c, 0x0a, 0x18, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x54, 0x4f, 0x44, 0x4f, 0x53, 0x5f,
	0x42, 0x59, 0x5f, 0x54, 0x49, 0x54, 0x4c, 0x45, 0x5f, 0x41, 0x53, 0x43, 0x10, 0x05, 0x12, 0x1d,
	0x0a, 0x19, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x54, 0x4f, 0x44, 0x4f, 0x53, 0x5f, 0x42, 0x59,
	0x5f, 0x54, 0x49, 0x54, 0x4c, 0x45, 0x5f, 0x44, 0x45, 0x53, 0x43, 0x10, 0x06, 0x42, 0x7a, 0x0a,
	0x11, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x79, 0x6f, 0x72, 0x67, 0x2e, 0x74, 0x6f, 0x64, 0x6f, 0x2e,
	0x76, 0x31, 0x42, 0x09, 0x54, 0x6f, 0x64, 0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4d, 0x79, 0x4f, 0x72,
	0x67, 0x2f, 0x61, 0x70, 0x69, 0x2d, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x65, 0x70, 0x6f, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x70, 0x62, 0x2f, 0x6d, 0x79, 0x6f, 0x72, 0x67, 0x2f, 0x74, 0x6f, 0x64, 0x6f,
	0x2f, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x4d, 0x54, 0x58, 0xaa, 0x02, 0x0d, 0x4d, 0x79, 0x4f, 0x72,
	0x67, 0x2e, 0x54, 0x6f, 0x64, 0x6f, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0d, 0x4d, 0x79, 0x4f, 0x72,
	0x67, 0x5c, 0x54, 0x6f, 0x64, 0x6f, 0x5c, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_myorg_todo_v1_get_todos_proto_rawDescOnce sync.Once
	file_myorg_todo_v1_get_todos_proto_rawDescData = file_myorg_todo_v1_get_todos_proto_rawDesc
)

func file_myorg_todo_v1_get_todos_proto_rawDescGZIP() []byte {
	file_myorg_todo_v1_get_todos_proto_rawDescOnce.Do(func() {
		file_myorg_todo_v1_get_todos_proto_rawDescData = protoimpl.X.CompressGZIP(file_myorg_todo_v1_get_todos_proto_rawDescData)
	})
	return file_myorg_todo_v1_get_todos_proto_rawDescData
}

var file_myorg_todo_v1_get_todos_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_myorg_todo_v1_get_todos_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_myorg_todo_v1_get_todos_proto_goTypes = []interface{}{
	(OrderTodosBy)(0),           // 0: myorg.todo.v1.OrderTodosBy
	(*GetTodosRequest)(nil),     // 1: myorg.todo.v1.GetTodosRequest
	(*GetTodosResponse)(nil),    // 2: myorg.todo.v1.GetTodosResponse
	(*TodoEdge)(nil),            // 3: myorg.todo.v1.TodoEdge
	(*TodosWhere)(nil),          // 4: myorg.todo.v1.TodosWhere
	(*NumberFilter)(nil),        // 5: myorg.todo.v1.NumberFilter
	(*StringFilter)(nil),        // 6: myorg.todo.v1.StringFilter
	(*PaginationRequest)(nil),   // 7: myorg.todo.v1.PaginationRequest
	(*PageInfo)(nil),            // 8: myorg.todo.v1.PageInfo
	(*Todo)(nil),                // 9: myorg.todo.v1.Todo
	(*timestamp.Timestamp)(nil), // 10: google.protobuf.Timestamp
}
var file_myorg_todo_v1_get_todos_proto_depIdxs = []int32{
	7,  // 0: myorg.todo.v1.GetTodosRequest.pagination_request:type_name -> myorg.todo.v1.PaginationRequest
	0,  // 1: myorg.todo.v1.GetTodosRequest.order_by:type_name -> myorg.todo.v1.OrderTodosBy
	4,  // 2: myorg.todo.v1.GetTodosRequest.where:type_name -> myorg.todo.v1.TodosWhere
	3,  // 3: myorg.todo.v1.GetTodosResponse.edges:type_name -> myorg.todo.v1.TodoEdge
	8,  // 4: myorg.todo.v1.GetTodosResponse.page_info:type_name -> myorg.todo.v1.PageInfo
	9,  // 5: myorg.todo.v1.TodoEdge.todo:type_name -> myorg.todo.v1.Todo
	6,  // 6: myorg.todo.v1.TodosWhere.title:type_name -> myorg.todo.v1.StringFilter
	5,  // 7: myorg.todo.v1.TodosWhere.created_at:type_name -> myorg.todo.v1.NumberFilter
	10, // 8: myorg.todo.v1.NumberFilter.in:type_name -> google.protobuf.Timestamp
	10, // 9: myorg.todo.v1.NumberFilter.not_in:type_name -> google.protobuf.Timestamp
	10, // 10: myorg.todo.v1.NumberFilter.not:type_name -> google.protobuf.Timestamp
	10, // 11: myorg.todo.v1.NumberFilter.lt:type_name -> google.protobuf.Timestamp
	10, // 12: myorg.todo.v1.NumberFilter.gt:type_name -> google.protobuf.Timestamp
	10, // 13: myorg.todo.v1.NumberFilter.lte:type_name -> google.protobuf.Timestamp
	10, // 14: myorg.todo.v1.NumberFilter.gte:type_name -> google.protobuf.Timestamp
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_myorg_todo_v1_get_todos_proto_init() }
func file_myorg_todo_v1_get_todos_proto_init() {
	if File_myorg_todo_v1_get_todos_proto != nil {
		return
	}
	file_myorg_todo_v1_todo_proto_init()
	file_myorg_todo_v1_pagination_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_myorg_todo_v1_get_todos_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTodosRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myorg_todo_v1_get_todos_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTodosResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myorg_todo_v1_get_todos_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TodoEdge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myorg_todo_v1_get_todos_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TodosWhere); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myorg_todo_v1_get_todos_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NumberFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myorg_todo_v1_get_todos_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_myorg_todo_v1_get_todos_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_myorg_todo_v1_get_todos_proto_goTypes,
		DependencyIndexes: file_myorg_todo_v1_get_todos_proto_depIdxs,
		EnumInfos:         file_myorg_todo_v1_get_todos_proto_enumTypes,
		MessageInfos:      file_myorg_todo_v1_get_todos_proto_msgTypes,
	}.Build()
	File_myorg_todo_v1_get_todos_proto = out.File
	file_myorg_todo_v1_get_todos_proto_rawDesc = nil
	file_myorg_todo_v1_get_todos_proto_goTypes = nil
	file_myorg_todo_v1_get_todos_proto_depIdxs = nil
}
